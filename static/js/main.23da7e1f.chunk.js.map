{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/Feedback.js","components/FeedbackOptions/data.js","components/Notification/Notification.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["Section","title","children","className","FeedBackButton","feedback","onLeaveFeedback","type","data-feedback","onClick","FeedbackOptions","options","map","option","toString","Feedback_Options","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","App","state","handleFeedback","target","dataset","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAkBeA,G,MAfC,SAAC,GACX,IADaC,EACd,EADcA,MAAOC,EACrB,EADqBA,SAEtB,OAAO,sBAAKC,UAAU,UAAf,UACH,6BAAKF,IACAC,OCJPE,G,MAAiB,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAChC,OAEI,wBAAQH,UAAU,SAASI,KAAK,SAASC,gBAAeH,EAAUI,QAASH,EAA3E,SACKD,MAeEK,EAVS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASL,EAAsB,EAAtBA,gBAChC,OAAOK,EAAQC,KAAI,SAACC,GAAD,OAAY,cAAC,EAAD,CAAwCR,SAAUQ,EAAQP,gBAAiBA,GAAtDO,EAAOC,gBCblDC,EAAmB,CAAC,OAAQ,UAAW,OCQrCC,G,MANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,MC4B3BC,EAzBI,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBAC5C,OAAO,qCACFD,EAAQ,GACb,gCACI,uCAAUH,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAYC,KACZ,sDAA0BC,EAA1B,UAGW,IAAVD,GAAe,cAAC,EAAD,CAAcL,QAAQ,0BCuC/BO,E,4MA/CbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPK,eAAiB,YAAiB,IACxBrB,EADuB,EAAbsB,OACUC,QAApBvB,SACR,EAAKwB,UAAS,SAACC,GAAD,sBAAmBzB,EAAWyB,EAAUzB,GAAY,O,EAEpE0B,mBAAqB,WAAO,IAAD,EACM,EAAKN,MACpC,OAFyB,EACjBN,KADiB,EACXC,QADW,EACFC,K,EAGzBW,gCAAkC,WAAO,IAC/Bb,EAAS,EAAKM,MAAdN,KACFG,EAAQ,EAAKS,qBACnB,OAAOT,EAAQW,KAAKC,MAAOf,EAAOG,EAAS,KAAO,G,uDAI1C,IAAD,EACwBa,KAAKV,MAA5BN,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQa,KAAKJ,qBACbR,EAAqBY,KAAKH,kCAGhC,OACE,gCACE,cAAC,EAAD,CAAS/B,MAAM,wBAAf,SACA,cAAC,EAAD,CAAiBU,QAASI,EAAkBT,gBAAiB6B,KAAKT,mBAGpE,cAAC,EAAD,CAASzB,MAAM,cAAf,SACI,cAAC,EAAD,CACEkB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GAvCda,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.23da7e1f.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport './Section.css';\n\nconst Section = ({ title, children }\n) => {\n    return <div className=\"Section\">\n        <h2>{title}</h2>\n            {children}\n        \n    </div>\n}\n\n\n\nSection.propTypes = {\ntitle: PropTypes.string.isRequired,\n};\n\nexport default Section;","import PropTypes from 'prop-types';\nimport './Feedback.css';\n\nconst FeedBackButton = ({ feedback, onLeaveFeedback }) => {\n    return (\n            \n        <button className=\"Button\" type='button' data-feedback={feedback} onClick={onLeaveFeedback}>\n            {feedback}\n        </button>\n    );\n}\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n    return options.map((option) => <FeedBackButton key={option.toString()} feedback={option} onLeaveFeedback={onLeaveFeedback}/>)\n}\n   \nFeedbackOptions.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.string),\n    onLeaveFeedback: PropTypes.func.isRequired,\n}\n\n\nexport default FeedbackOptions;\n","export const Feedback_Options = ['good', 'neutral', 'bad'];","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired,\n}\n\nexport default Notification;","import PropTypes from 'prop-types';\n\nimport './Statistics.css';\nimport Notification from '../Notification'\n\nconst Statistics = ({good, neutral, bad, total, positivePercentage}) => {\n    return <>\n        {total > 0 && (\n    <div>\n        <p>Good: {good }</p>\n        <p>Neutral: {neutral}</p>\n        <p>Bad: {bad }</p>\n        <p>Total: { total}</p>\n        <p>Positive Percentage: { positivePercentage}%</p>\n    </div>\n        )}\n        {total === 0 && <Notification message=\"No feedback given\"/>}\n            \n        </>\n}\n    \nStatistics.propTypes = {\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n    total: PropTypes.number,\n    positivePercentage: PropTypes.number,\n\n}\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport { Feedback_Options } from './components/FeedbackOptions/data';\nimport Statistics from './components/Statistics';\n\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n  handleFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n    this.setState((prevState) => ({ [feedback]: prevState[feedback] + 1 }));\n  };\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return total ? Math.round((good / total) * 100) : 0;\n  }\n    \n    \n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    \n  \n    return (\n      <div>\n        <Section title='Please leave feedback'> \n        <FeedbackOptions options={Feedback_Options} onLeaveFeedback={this.handleFeedback} />\n      </Section>\n       \n      <Section title='Statistics:'>\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage} />\n        </Section>\n        \n      </div>\n     );\n  }\n}\n\n\nexport default App;\n\n// options={} onLeaveFeedback={}\n\n/* <Statistics good={} neutral={} bad={} total={} positivePercentage={}></Statistics> */","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}